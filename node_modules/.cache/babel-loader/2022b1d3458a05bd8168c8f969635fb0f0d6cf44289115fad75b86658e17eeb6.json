{"ast":null,"code":"import Model from '../models/model.js';\nimport LeftMenu from './leftMenu.js';\nimport Homepage from './homepage.js';\nimport React, { useState } from 'react';\nimport App from '../App.js';\nimport ReactDOM from 'react-dom/client';\nlet model = new Model();\nclass FakeStackOverflow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      questions: model.getAllQstns().sort((a, b) => b.askDate - a.askDate),\n      tags: model.getAllTags(),\n      active: null,\n      unanswer: [],\n      searching: []\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n  updateState(newState) {\n    setPage(newState);\n  }\n  render() {}\n}\n/*\r\nexport default function FakeStackOverflow() {\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Function to update Homepage state\r\n  const updateState = (newState) => {\r\n    setPage(newState);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n          <h1 id=\"header\">Fake Stack Overflow</h1>\r\n          <input type=\"text\" placeholder=\"Search ...\" id=\"search\" /> \r\n      </div>\r\n      <div id=\"main\" className=\"main\">\r\n        <LeftMenu  updateState = {updateState}/>\r\n        <Homepage newpage ={page} updateState = {updateState}/>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n*/","map":{"version":3,"names":["Model","LeftMenu","Homepage","React","useState","App","ReactDOM","model","FakeStackOverflow","Component","constructor","props","state","page","questions","getAllQstns","sort","a","b","askDate","tags","getAllTags","active","unanswer","searching","updateState","bind","newState","setPage","render"],"sources":["D:/pa02react-team_andi_mingrong/src/components/fakestackoverflow.js"],"sourcesContent":["import Model from '../models/model.js';\r\nimport LeftMenu from './leftMenu.js'\r\nimport Homepage from './homepage.js'\r\nimport React, { useState } from 'react';\r\nimport App from '../App.js'\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nlet model = new Model();\r\nclass FakeStackOverflow extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      page:1,\r\n      questions:model.getAllQstns().sort((a, b) => b.askDate - a.askDate),\r\n      tags:model.getAllTags(),\r\n      active:null,\r\n      unanswer:[],\r\n      searching: []\r\n    }\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n  \r\n  updateState(newState){\r\n    setPage(newState);\r\n  }\r\n  render(){\r\n\r\n  }\r\n  \r\n}\r\n/*\r\nexport default function FakeStackOverflow() {\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Function to update Homepage state\r\n  const updateState = (newState) => {\r\n    setPage(newState);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n          <h1 id=\"header\">Fake Stack Overflow</h1>\r\n          <input type=\"text\" placeholder=\"Search ...\" id=\"search\" /> \r\n      </div>\r\n      <div id=\"main\" className=\"main\">\r\n        <LeftMenu  updateState = {updateState}/>\r\n        <Homepage newpage ={page} updateState = {updateState}/>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n*/\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,IAAIC,KAAK,GAAG,IAAIP,KAAK,EAAE;AACvB,MAAMQ,iBAAiB,SAASL,KAAK,CAACM,SAAS,CAAC;EAC9CC,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAE;MACVC,IAAI,EAAC,CAAC;MACNC,SAAS,EAACP,KAAK,CAACQ,WAAW,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,OAAO,GAAGF,CAAC,CAACE,OAAO,CAAC;MACnEC,IAAI,EAACb,KAAK,CAACc,UAAU,EAAE;MACvBC,MAAM,EAAC,IAAI;MACXC,QAAQ,EAAC,EAAE;MACXC,SAAS,EAAE;IACb,CAAC;IACD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAD,WAAWA,CAACE,QAAQ,EAAC;IACnBC,OAAO,CAACD,QAAQ,CAAC;EACnB;EACAE,MAAMA,CAAA,EAAE,CAER;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}