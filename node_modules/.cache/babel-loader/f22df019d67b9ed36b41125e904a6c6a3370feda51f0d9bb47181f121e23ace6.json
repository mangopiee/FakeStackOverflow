{"ast":null,"code":"var _jsxFileName = \"D:\\\\pa02react-team_andi_mingrong\\\\src\\\\components\\\\answersPage.js\";\nimport Model from '../models/model.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst model = new Model();\nclass AnswersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.newQuestion.title,\n      text: props.newQuestion.text,\n      askedBy: props.newQuestion.askedBy,\n      askDate: props.newQuestion.askDate,\n      ansIds: props.newQuestion.ansIds,\n      views: props.newQuestion.views,\n      num_ans: props.newQuestion.ansIds.length,\n      link_index: 0,\n      index: 0\n    };\n    this.model = model;\n    this.goPostAnswer = this.goPostAnswer.bind(this);\n    this.applyWebSide = this.applyWebSide.bind(this);\n    this.brainPower = this.brainPower.bind(this);\n    this.updateIndex;\n  }\n  goPostAnswer() {\n    this.props.goPost();\n  }\n  updateIndex() {\n    var new_i = this.state.link_index;\n    this.setState({\n      link_index: new_i\n    });\n  }\n  applyWebSide(question) {\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\n    var output = [];\n    if (question.hyper === 1) {\n      for (let i = 0; i < question.hyperLinks.length; i++) {\n        const parts = question.text.split(regex);\n        for (let j = 0; j < parts.length; j++) {\n          if (parts[j] === question.hyperText[i]) {\n            output.push('hyperlink**');\n            i++;\n            j++;\n          } else {\n            output.push(parts[j]);\n          }\n        }\n      }\n      return output;\n    } else {\n      const parts = question.text.split(regex);\n      return parts;\n    }\n  }\n  returnText(output, index) {\n    if (output !== 'hyperlink**') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: output\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    } else {\n      var link_index = this.state.link_index++;\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.props.newQuestion.hyperLinks[link_index],\n        children: this.props.newQuestion.hyperText[link_index]\n      }, `a-${link_index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    }\n  }\n  brainPower(answer_text) {\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/g; // Note the 'g' flag for global matching\n    const matches = [...answer_text.matchAll(regex)];\n    if (matches.length > 0) {\n      let lastIndex = 0;\n      const elements = [];\n      matches.forEach(match => {\n        const [fullMatch, hypertext, url] = match;\n        const front_text = answer_text.slice(lastIndex, match.index);\n        lastIndex = match.index + fullMatch.length;\n\n        // Push the non-hyperlink text\n        if (front_text) {\n          elements.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: front_text\n          }, lastIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 27\n          }, this));\n        }\n\n        // Push the hyperlink\n        elements.push( /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url,\n          children: hypertext\n        }, lastIndex + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this));\n      });\n\n      // Add any remaining text after the last hyperlink\n      if (lastIndex < answer_text.length) {\n        elements.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          children: answer_text.slice(lastIndex)\n        }, lastIndex + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this));\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: elements\n        }, void 0, false);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this);\n    }\n  }\n  render() {\n    const answersIds = this.state.ansIds;\n    const answers = this.props.answers.sort((a, b) => b.ansDate - a.ansDate);\n    const filteredAnswers = answers.filter(answer => answersIds.includes(answer.aid));\n    const text_arr = this.applyWebSide(this.props.newQuestion);\n    const display = text_arr.map((text, index) => this.returnText(text, index));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question_section1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"numberOfAnswers\",\n            children: [this.state.num_ans, \" answers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"q_title\",\n            children: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"askQ\",\n            onClick: this.props.setPage,\n            children: \"Ask Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewdisplay\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"numOfViews\",\n              children: [\" \", this.state.views, \" views\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textdisplay\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"questionText\",\n              children: display\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thedate\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ask\",\n              children: [this.state.askedBy, \" asked \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: [\" at \", formatQuestionTime(this.state.askDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oneAnswer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answerBody\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.brainPower(answer.text)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"answer\",\n              children: [answer.ansBy, \" answered \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"date\",\n              children: [\" \", formatQuestionTime(answer.ansDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"answer_question\",\n          onClick: () => this.goPostAnswer(),\n          children: \"Answer Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default AnswersPage;\nfunction formatQuestionTime(questionDate) {\n  const currentDate = new Date();\n  const postDate = new Date(questionDate);\n  const timeDifference = currentDate - postDate;\n\n  // Convert milliseconds to seconds, minutes, or hours\n  const secondsDifference = Math.floor(timeDifference / 1000);\n  const minutesDifference = Math.floor(secondsDifference / 60);\n  const hoursDifference = Math.floor(minutesDifference / 60);\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const month = monthNames[postDate.getMonth()];\n  const date = postDate.getDate();\n  const hour = postDate.getHours();\n  const min = postDate.getMinutes();\n  const str = `${month} ${date} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  const str2 = `${month} ${date}, ${postDate.getFullYear()} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  if (secondsDifference < 60) {\n    return `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\n  } else if (minutesDifference < 60) {\n    return `${minutesDifference} minute${minutesDifference !== 1 ? 's' : ''} ago`;\n  } else if (hoursDifference < 24) {\n    return `${hoursDifference} hour${hoursDifference !== 1 ? 's' : ''} ago`;\n  } else if (currentDate.getFullYear() === postDate.getFullYear()) {\n    return str;\n  } else {\n    // If more than 24 hours ago, you can display the full date or another format\n    return str2;\n  }\n}","map":{"version":3,"names":["Model","React","jsxDEV","_jsxDEV","Fragment","_Fragment","model","AnswersPage","Component","constructor","props","state","title","newQuestion","text","askedBy","askDate","ansIds","views","num_ans","length","link_index","index","goPostAnswer","bind","applyWebSide","brainPower","updateIndex","goPost","new_i","setState","question","regex","output","hyper","i","hyperLinks","parts","split","j","hyperText","push","returnText","children","fileName","_jsxFileName","lineNumber","columnNumber","href","answer_text","matches","matchAll","lastIndex","elements","forEach","match","fullMatch","hypertext","url","front_text","slice","render","answersIds","answers","sort","a","b","ansDate","filteredAnswers","filter","answer","includes","aid","text_arr","display","map","className","id","onClick","setPage","formatQuestionTime","ansBy","questionDate","currentDate","Date","postDate","timeDifference","secondsDifference","Math","floor","minutesDifference","hoursDifference","monthNames","month","getMonth","date","getDate","hour","getHours","min","getMinutes","str","toString","padStart","str2","getFullYear"],"sources":["D:/pa02react-team_andi_mingrong/src/components/answersPage.js"],"sourcesContent":["import Model from '../models/model.js';\nimport React from 'react';\n\nconst model = new Model();\n\nclass AnswersPage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            title:props.newQuestion.title,\n            text: props.newQuestion.text,\n            askedBy: props.newQuestion.askedBy,\n            askDate: props.newQuestion.askDate,\n            ansIds: props.newQuestion.ansIds,\n            views: props.newQuestion.views,\n            num_ans: props.newQuestion.ansIds.length,\n            link_index: 0,\n            index: 0\n        };\n        this.model = model;\n        this.goPostAnswer = this.goPostAnswer.bind(this);\n        this.applyWebSide = this.applyWebSide.bind(this);\n        this.brainPower = this.brainPower.bind(this);\n        this.updateIndex\n    }\n\n    goPostAnswer(){\n        this.props.goPost();\n    }\n    updateIndex(){\n      var new_i = this.state.link_index;\n      this.setState({link_index:new_i});\n    }\n\n    applyWebSide(question){\n        const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\n        var output = [];\n        if(question.hyper === 1){\n          for(let i = 0;i<question.hyperLinks.length;i++){\n            const parts = question.text.split(regex);\n            for(let j = 0; j < parts.length;j++){\n              if(parts[j] === question.hyperText[i]){\n                output.push('hyperlink**');\n                i++;\n                j++;\n              }\n              else{\n                output.push(parts[j]);\n              }\n            }\n          }\n          return output;\n        }else{\n            const parts = question.text.split(regex);\n          return parts;\n        }\n      }\n    \n    returnText(output,index){\n        if(output!=='hyperlink**'){\n          return(\n            <span key = {index}>\n              {output}\n            </span>\n          );\n        }\n        else{\n          \n          var link_index = this.state.link_index++;\n          return(\n            <a key={`a-${link_index}`} href = {this.props.newQuestion.hyperLinks[link_index]}>\n              {this.props.newQuestion.hyperText[link_index]}\n            </a>\n          );\n        }\n        \n    }\n    \n    brainPower(answer_text) {\n      const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/g; // Note the 'g' flag for global matching\n      const matches = [...answer_text.matchAll(regex)];\n    \n      if (matches.length > 0) {\n        let lastIndex = 0;\n        const elements = [];\n    \n        matches.forEach((match) => {\n          const [fullMatch, hypertext, url] = match;\n          const front_text = answer_text.slice(lastIndex, match.index);\n          lastIndex = match.index + fullMatch.length;\n    \n          // Push the non-hyperlink text\n          if (front_text) {\n            elements.push(<span key={lastIndex}>{front_text}</span>);\n          }\n    \n          // Push the hyperlink\n          elements.push(\n            <a href={url} key={lastIndex + 1}>\n              {hypertext}\n            </a>\n          );\n        });\n    \n        // Add any remaining text after the last hyperlink\n        if (lastIndex < answer_text.length) {\n          elements.push(\n            <span key={lastIndex + 2}>\n              {answer_text.slice(lastIndex)}\n            </span>\n          );\n    \n          return <>{elements}</>;\n        }\n      } else {\n        return (\n          <span>\n            {answer_text}\n          </span>\n        );\n      }\n    }\n    render(){\n        const answersIds = this.state.ansIds;\n        const answers = this.props.answers.sort((a, b) => b.ansDate - a.ansDate)\n        const filteredAnswers = answers.filter((answer) => answersIds.includes(answer.aid));\n        const text_arr = this.applyWebSide(this.props.newQuestion);\n        const display = text_arr.map((text,index)=>(this.returnText(text,index)))\n        \n        return (\n            <>\n            <div className=\"question_main\">\n                <div className = \"question_section1\">\n                    <h1 id=\"numberOfAnswers\" >{this.state.num_ans} answers</h1>\n                    <h1 id = \"q_title\">{this.state.title}</h1>\n\n                    <button id=\"askQ\" onClick={this.props.setPage}>Ask Question</button>\n                </div>\n                <div className=\"question\">\n                    <div className=\"viewdisplay\">\n                        <h2 id = \"numOfViews\"> {this.state.views} views</h2>\n                    </div>\n                    <div className=\"textdisplay\">\n                        <p id = \"questionText\">{display}</p>\n                    </div>\n\n\n                    <div className=\"thedate\">\n                        <p className=\"ask\">{this.state.askedBy} asked </p>\n                        <p className=\"date\"> at {formatQuestionTime(this.state.askDate)}</p>\n                    </div>\n                </div>\n            <div></div>\n\n            </div>\n\n            <div>\n                {filteredAnswers.map((answer, index)=>(\n                    <div className = \"oneAnswer\" key={index}>\n                        <div className = \"answerBody\">\n                            <p>{this.brainPower(answer.text)}</p>\n                        </div>\n          \n                        <div className=\"userInfo\">\n                        <p id=\"answer\">{answer.ansBy} answered </p>\n                        <p id=\"date\"> {formatQuestionTime(answer.ansDate)}</p>\n                        </div>\n\n                        <div></div>\n                    </div>\n                ))}\n            </div>\n            \n            <p>\n                <button id = \"answer_question\" onClick = {() => this.goPostAnswer()}>Answer Question</button>\n            </p>\n            </>\n        );\n    }\n  \n}export default AnswersPage;\n\nfunction formatQuestionTime(questionDate) {\n    const currentDate = new Date();\n    const postDate = new Date(questionDate);\n  \n    const timeDifference = currentDate - postDate;\n  \n    // Convert milliseconds to seconds, minutes, or hours\n    const secondsDifference = Math.floor(timeDifference / 1000);\n    const minutesDifference = Math.floor(secondsDifference / 60);\n    const hoursDifference = Math.floor(minutesDifference / 60);\n  \n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const month = monthNames[postDate.getMonth()];\n    const date = postDate.getDate();\n    const hour = postDate.getHours();\n    const min = postDate.getMinutes();\n    const str = `${month} ${date} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n    const str2 = `${month} ${date}, ${postDate.getFullYear()} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  \n    if (secondsDifference < 60) {\n      return `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\n    } else if (minutesDifference < 60) {\n      return `${minutesDifference} minute${minutesDifference !== 1 ? 's' : ''} ago`;\n    } else if (hoursDifference < 24) {\n      return `${hoursDifference} hour${hoursDifference !== 1 ? 's' : ''} ago`;\n    } else if (currentDate.getFullYear() === postDate.getFullYear()) {\n      return str;\n    }else {\n      // If more than 24 hours ago, you can display the full date or another format\n      return str2;\n    }\n  }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAG,IAAIN,KAAK,EAAE;AAEzB,MAAMO,WAAW,SAASN,KAAK,CAACO,SAAS;EACrCC,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAACF,KAAK,CAACG,WAAW,CAACD,KAAK;MAC7BE,IAAI,EAAEJ,KAAK,CAACG,WAAW,CAACC,IAAI;MAC5BC,OAAO,EAAEL,KAAK,CAACG,WAAW,CAACE,OAAO;MAClCC,OAAO,EAAEN,KAAK,CAACG,WAAW,CAACG,OAAO;MAClCC,MAAM,EAAEP,KAAK,CAACG,WAAW,CAACI,MAAM;MAChCC,KAAK,EAAER,KAAK,CAACG,WAAW,CAACK,KAAK;MAC9BC,OAAO,EAAET,KAAK,CAACG,WAAW,CAACI,MAAM,CAACG,MAAM;MACxCC,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE;IACX,CAAC;IACD,IAAI,CAAChB,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACiB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACE,UAAU,GAAG,IAAI,CAACA,UAAU,CAACF,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACG,WAAW;EACpB;EAEAJ,YAAYA,CAAA,EAAE;IACV,IAAI,CAACb,KAAK,CAACkB,MAAM,EAAE;EACvB;EACAD,WAAWA,CAAA,EAAE;IACX,IAAIE,KAAK,GAAG,IAAI,CAAClB,KAAK,CAACU,UAAU;IACjC,IAAI,CAACS,QAAQ,CAAC;MAACT,UAAU,EAACQ;IAAK,CAAC,CAAC;EACnC;EAEAJ,YAAYA,CAACM,QAAQ,EAAC;IAClB,MAAMC,KAAK,GAAG,qCAAqC;IACnD,IAAIC,MAAM,GAAG,EAAE;IACf,IAAGF,QAAQ,CAACG,KAAK,KAAK,CAAC,EAAC;MACtB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,GAACJ,QAAQ,CAACK,UAAU,CAAChB,MAAM,EAACe,CAAC,EAAE,EAAC;QAC7C,MAAME,KAAK,GAAGN,QAAQ,CAACjB,IAAI,CAACwB,KAAK,CAACN,KAAK,CAAC;QACxC,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACjB,MAAM,EAACmB,CAAC,EAAE,EAAC;UAClC,IAAGF,KAAK,CAACE,CAAC,CAAC,KAAKR,QAAQ,CAACS,SAAS,CAACL,CAAC,CAAC,EAAC;YACpCF,MAAM,CAACQ,IAAI,CAAC,aAAa,CAAC;YAC1BN,CAAC,EAAE;YACHI,CAAC,EAAE;UACL,CAAC,MACG;YACFN,MAAM,CAACQ,IAAI,CAACJ,KAAK,CAACE,CAAC,CAAC,CAAC;UACvB;QACF;MACF;MACA,OAAON,MAAM;IACf,CAAC,MAAI;MACD,MAAMI,KAAK,GAAGN,QAAQ,CAACjB,IAAI,CAACwB,KAAK,CAACN,KAAK,CAAC;MAC1C,OAAOK,KAAK;IACd;EACF;EAEFK,UAAUA,CAACT,MAAM,EAACX,KAAK,EAAC;IACpB,IAAGW,MAAM,KAAG,aAAa,EAAC;MACxB,oBACE9B,OAAA;QAAAwC,QAAA,EACGV;MAAM,GADIX,KAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEX;IAEX,CAAC,MACG;MAEF,IAAI1B,UAAU,GAAG,IAAI,CAACV,KAAK,CAACU,UAAU,EAAE;MACxC,oBACElB,OAAA;QAA2B6C,IAAI,EAAI,IAAI,CAACtC,KAAK,CAACG,WAAW,CAACuB,UAAU,CAACf,UAAU,CAAE;QAAAsB,QAAA,EAC9E,IAAI,CAACjC,KAAK,CAACG,WAAW,CAAC2B,SAAS,CAACnB,UAAU;MAAC,GADtC,KAAIA,UAAW,EAAC;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAErB;IAER;EAEJ;EAEArB,UAAUA,CAACuB,WAAW,EAAE;IACtB,MAAMjB,KAAK,GAAG,sCAAsC,CAAC,CAAC;IACtD,MAAMkB,OAAO,GAAG,CAAC,GAAGD,WAAW,CAACE,QAAQ,CAACnB,KAAK,CAAC,CAAC;IAEhD,IAAIkB,OAAO,CAAC9B,MAAM,GAAG,CAAC,EAAE;MACtB,IAAIgC,SAAS,GAAG,CAAC;MACjB,MAAMC,QAAQ,GAAG,EAAE;MAEnBH,OAAO,CAACI,OAAO,CAAEC,KAAK,IAAK;QACzB,MAAM,CAACC,SAAS,EAAEC,SAAS,EAAEC,GAAG,CAAC,GAAGH,KAAK;QACzC,MAAMI,UAAU,GAAGV,WAAW,CAACW,KAAK,CAACR,SAAS,EAAEG,KAAK,CAACjC,KAAK,CAAC;QAC5D8B,SAAS,GAAGG,KAAK,CAACjC,KAAK,GAAGkC,SAAS,CAACpC,MAAM;;QAE1C;QACA,IAAIuC,UAAU,EAAE;UACdN,QAAQ,CAACZ,IAAI,eAACtC,OAAA;YAAAwC,QAAA,EAAuBgB;UAAU,GAAtBP,SAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAqB,CAAC;QAC1D;;QAEA;QACAM,QAAQ,CAACZ,IAAI,eACXtC,OAAA;UAAG6C,IAAI,EAAEU,GAAI;UAAAf,QAAA,EACVc;QAAS,GADOL,SAAS,GAAG,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAE5B,CACL;MACH,CAAC,CAAC;;MAEF;MACA,IAAIK,SAAS,GAAGH,WAAW,CAAC7B,MAAM,EAAE;QAClCiC,QAAQ,CAACZ,IAAI,eACXtC,OAAA;UAAAwC,QAAA,EACGM,WAAW,CAACW,KAAK,CAACR,SAAS;QAAC,GADpBA,SAAS,GAAG,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEjB,CACR;QAED,oBAAO5C,OAAA,CAAAE,SAAA;UAAAsC,QAAA,EAAGU;QAAQ,iBAAI;MACxB;IACF,CAAC,MAAM;MACL,oBACElD,OAAA;QAAAwC,QAAA,EACGM;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP;IAEX;EACF;EACAc,MAAMA,CAAA,EAAE;IACJ,MAAMC,UAAU,GAAG,IAAI,CAACnD,KAAK,CAACM,MAAM;IACpC,MAAM8C,OAAO,GAAG,IAAI,CAACrD,KAAK,CAACqD,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,OAAO,GAAGF,CAAC,CAACE,OAAO,CAAC;IACxE,MAAMC,eAAe,GAAGL,OAAO,CAACM,MAAM,CAAEC,MAAM,IAAKR,UAAU,CAACS,QAAQ,CAACD,MAAM,CAACE,GAAG,CAAC,CAAC;IACnF,MAAMC,QAAQ,GAAG,IAAI,CAAChD,YAAY,CAAC,IAAI,CAACf,KAAK,CAACG,WAAW,CAAC;IAC1D,MAAM6D,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC7D,IAAI,EAACQ,KAAK,KAAI,IAAI,CAACoB,UAAU,CAAC5B,IAAI,EAACQ,KAAK,CAAE,CAAC;IAEzE,oBACInB,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACAxC,OAAA;QAAKyE,SAAS,EAAC,eAAe;QAAAjC,QAAA,gBAC1BxC,OAAA;UAAKyE,SAAS,EAAG,mBAAmB;UAAAjC,QAAA,gBAChCxC,OAAA;YAAI0E,EAAE,EAAC,iBAAiB;YAAAlC,QAAA,GAAG,IAAI,CAAChC,KAAK,CAACQ,OAAO,EAAC,UAAQ;UAAA;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC3D5C,OAAA;YAAI0E,EAAE,EAAG,SAAS;YAAAlC,QAAA,EAAE,IAAI,CAAChC,KAAK,CAACC;UAAK;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAE1C5C,OAAA;YAAQ0E,EAAE,EAAC,MAAM;YAACC,OAAO,EAAE,IAAI,CAACpE,KAAK,CAACqE,OAAQ;YAAApC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClE,eACN5C,OAAA;UAAKyE,SAAS,EAAC,UAAU;UAAAjC,QAAA,gBACrBxC,OAAA;YAAKyE,SAAS,EAAC,aAAa;YAAAjC,QAAA,eACxBxC,OAAA;cAAI0E,EAAE,EAAG,YAAY;cAAAlC,QAAA,GAAC,GAAC,EAAC,IAAI,CAAChC,KAAK,CAACO,KAAK,EAAC,QAAM;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClD,eACN5C,OAAA;YAAKyE,SAAS,EAAC,aAAa;YAAAjC,QAAA,eACxBxC,OAAA;cAAG0E,EAAE,EAAG,cAAc;cAAAlC,QAAA,EAAE+B;YAAO;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClC,eAGN5C,OAAA;YAAKyE,SAAS,EAAC,SAAS;YAAAjC,QAAA,gBACpBxC,OAAA;cAAGyE,SAAS,EAAC,KAAK;cAAAjC,QAAA,GAAE,IAAI,CAAChC,KAAK,CAACI,OAAO,EAAC,SAAO;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI,eAClD5C,OAAA;cAAGyE,SAAS,EAAC,MAAM;cAAAjC,QAAA,GAAC,MAAI,EAACqC,kBAAkB,CAAC,IAAI,CAACrE,KAAK,CAACK,OAAO,CAAC;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ,eACV5C,OAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAW;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEL,eAEN5C,OAAA;QAAAwC,QAAA,EACKyB,eAAe,CAACO,GAAG,CAAC,CAACL,MAAM,EAAEhD,KAAK,kBAC/BnB,OAAA;UAAKyE,SAAS,EAAG,WAAW;UAAAjC,QAAA,gBACxBxC,OAAA;YAAKyE,SAAS,EAAG,YAAY;YAAAjC,QAAA,eACzBxC,OAAA;cAAAwC,QAAA,EAAI,IAAI,CAACjB,UAAU,CAAC4C,MAAM,CAACxD,IAAI;YAAC;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACnC,eAEN5C,OAAA;YAAKyE,SAAS,EAAC,UAAU;YAAAjC,QAAA,gBACzBxC,OAAA;cAAG0E,EAAE,EAAC,QAAQ;cAAAlC,QAAA,GAAE2B,MAAM,CAACW,KAAK,EAAC,YAAU;YAAA;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI,eAC3C5C,OAAA;cAAG0E,EAAE,EAAC,MAAM;cAAAlC,QAAA,GAAC,GAAC,EAACqC,kBAAkB,CAACV,MAAM,CAACH,OAAO,CAAC;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAChD,eAEN5C,OAAA;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAW;QAAA,GAVmBzB,KAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAY1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eAEN5C,OAAA;QAAAwC,QAAA,eACIxC,OAAA;UAAQ0E,EAAE,EAAG,iBAAiB;UAACC,OAAO,EAAIA,CAAA,KAAM,IAAI,CAACvD,YAAY,EAAG;UAAAoB,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7F;IAAA,gBACD;EAEX;AAEJ;AAAC,eAAexC,WAAW;AAE3B,SAASyE,kBAAkBA,CAACE,YAAY,EAAE;EACtC,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;EAC9B,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAACF,YAAY,CAAC;EAEvC,MAAMI,cAAc,GAAGH,WAAW,GAAGE,QAAQ;;EAE7C;EACA,MAAME,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,GAAG,IAAI,CAAC;EAC3D,MAAMI,iBAAiB,GAAGF,IAAI,CAACC,KAAK,CAACF,iBAAiB,GAAG,EAAE,CAAC;EAC5D,MAAMI,eAAe,GAAGH,IAAI,CAACC,KAAK,CAACC,iBAAiB,GAAG,EAAE,CAAC;EAE1D,MAAME,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACvG,MAAMC,KAAK,GAAGD,UAAU,CAACP,QAAQ,CAACS,QAAQ,EAAE,CAAC;EAC7C,MAAMC,IAAI,GAAGV,QAAQ,CAACW,OAAO,EAAE;EAC/B,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,QAAQ,EAAE;EAChC,MAAMC,GAAG,GAAGd,QAAQ,CAACe,UAAU,EAAE;EACjC,MAAMC,GAAG,GAAI,GAAER,KAAM,IAAGE,IAAK,OAAME,IAAI,CAACK,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGJ,GAAG,CAACG,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EACxG,MAAMC,IAAI,GAAI,GAAEX,KAAM,IAAGE,IAAK,KAAIV,QAAQ,CAACoB,WAAW,EAAG,OAAMR,IAAI,CAACK,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGJ,GAAG,CAACG,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAEpI,IAAIhB,iBAAiB,GAAG,EAAE,EAAE;IAC1B,OAAQ,GAAEA,iBAAkB,UAASA,iBAAiB,KAAK,CAAC,GAAG,GAAG,GAAG,EAAG,MAAK;EAC/E,CAAC,MAAM,IAAIG,iBAAiB,GAAG,EAAE,EAAE;IACjC,OAAQ,GAAEA,iBAAkB,UAASA,iBAAiB,KAAK,CAAC,GAAG,GAAG,GAAG,EAAG,MAAK;EAC/E,CAAC,MAAM,IAAIC,eAAe,GAAG,EAAE,EAAE;IAC/B,OAAQ,GAAEA,eAAgB,QAAOA,eAAe,KAAK,CAAC,GAAG,GAAG,GAAG,EAAG,MAAK;EACzE,CAAC,MAAM,IAAIR,WAAW,CAACsB,WAAW,EAAE,KAAKpB,QAAQ,CAACoB,WAAW,EAAE,EAAE;IAC/D,OAAOJ,GAAG;EACZ,CAAC,MAAK;IACJ;IACA,OAAOG,IAAI;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}