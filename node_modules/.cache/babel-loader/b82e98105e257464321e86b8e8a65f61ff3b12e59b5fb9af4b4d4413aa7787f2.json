{"ast":null,"code":"var _jsxFileName = \"D:\\\\pa02react-team_andi_mingrong\\\\src\\\\components\\\\fakestackoverflow.js\";\nimport Model from '../models/model.js';\nimport LeftMenu from './leftMenu.js';\nimport Homepage from './homepage.js';\nimport React, { useState } from 'react';\nimport Search from './searching.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet model = new Model();\nclass FakeStackOverflow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      questions: model.getAllQstns().sort((a, b) => b.askDate - a.askDate),\n      tags: model.getAllTags(),\n      active: null,\n      unanswer: [],\n      searching: []\n    };\n    this.updateState = this.updateState.bind(this);\n    this.updateQuestions = this.updateQuestions.bind(this);\n    this.updateTags = this.updateTags.bind(this);\n    this.updateSearching = this.updateSearching.bind(this);\n    this.searchByTags = this.searchByTags.bind(this);\n    this.checkHyperLink = this.checkHyperLink.bind(this);\n  }\n  updateState(newState) {\n    this.setState({\n      page: newState\n    });\n  }\n  updateQuestions(updatedQuestions) {\n    this.setState({\n      questions: updatedQuestions\n    });\n  }\n  updateTags(updatedTags) {\n    this.setState({\n      tags: updatedTags\n    });\n  }\n  updateSearching(updateSearch) {\n    this.setState({\n      searching: updateSearch\n    });\n  }\n  searchByTags(tag) {\n    var search_arr = [];\n    var tag_arr = [tag];\n    this.state.questions.forEach(question => {\n      if (this.check_exist_byTag(question, tag_arr) == true) {\n        search_arr.push(question);\n      }\n    });\n    console.log(search_arr);\n    this.setState({\n      page: 7,\n      searching: search_arr\n    });\n  }\n  check_exist_byTag(question, tag_search) {\n    const tags = this.state.tags;\n    const tag_arr = question.tagIds;\n    var tag_in_ids = [];\n    for (let i = 0; i < tag_search.length; i++) {\n      for (let j = 0; j < tags.length; j++) {\n        if (tag_search[i] == tags[j].name) {\n          tag_in_ids.push(tags[j].tid);\n        }\n      }\n    }\n    for (let i = 0; i < tag_arr.length; i++) {\n      for (let j = 0; j < tag_in_ids.length; j++) {\n        if (tag_arr[i] == tag_in_ids[j]) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  checkHyperLink() {\n    const questions = this.state.questions;\n    for (const question of questions) {\n      question.hyperLink = 0; // 0 stand for error, 1 stand for true, 2 stand for incorrect format\n    }\n\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/g;\n    const regex_format = /\\[([^\\]]+)\\]\\(([^\\s]+)\\)/g;\n    if (this.state.questions[0].text.match(regex)) {\n      this.state.questions[0].hyperLink = 1;\n      const [, linkText, url] = match.match(/\\[(.*?)\\]\\((https?:\\/\\/\\S+?)\\)/);\n    }\n    console.log(this.state.questions[0].hyperLink);\n  }\n  render() {\n    this.checkHyperLink();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"header\",\n          children: \"Fake Stack Overflow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          searching: this.state.searching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(LeftMenu, {\n          updateState: this.updateState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Homepage, {\n          newpage: this.state.page,\n          questions: this.state.questions,\n          tags: this.state.tags,\n          updateState: this.updateState,\n          updateQuestions: this.updateQuestions,\n          updateTags: this.updateTags,\n          searchByTag: this.searchByTags,\n          searching: this.state.searching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default FakeStackOverflow;","map":{"version":3,"names":["Model","LeftMenu","Homepage","React","useState","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","model","FakeStackOverflow","Component","constructor","props","state","page","questions","getAllQstns","sort","a","b","askDate","tags","getAllTags","active","unanswer","searching","updateState","bind","updateQuestions","updateTags","updateSearching","searchByTags","checkHyperLink","newState","setState","updatedQuestions","updatedTags","updateSearch","tag","search_arr","tag_arr","forEach","question","check_exist_byTag","push","console","log","tag_search","tagIds","tag_in_ids","i","length","j","name","tid","hyperLink","regex","regex_format","text","match","linkText","url","render","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","newpage","searchByTag"],"sources":["D:/pa02react-team_andi_mingrong/src/components/fakestackoverflow.js"],"sourcesContent":["import Model from '../models/model.js';\r\nimport LeftMenu from './leftMenu.js'\r\nimport Homepage from './homepage.js'\r\nimport React, { useState } from 'react';\r\nimport Search from './searching.js'\r\n\r\nlet model = new Model();\r\nclass FakeStackOverflow extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      page:1,\r\n      questions:model.getAllQstns().sort((a, b) => b.askDate - a.askDate),\r\n      tags:model.getAllTags(),\r\n      active:null,\r\n      unanswer:[],\r\n      searching: []\r\n    }\r\n    this.updateState = this.updateState.bind(this);\r\n    this.updateQuestions = this.updateQuestions.bind(this);\r\n    this.updateTags = this.updateTags.bind(this);\r\n    this.updateSearching = this.updateSearching.bind(this);\r\n    this.searchByTags = this.searchByTags.bind(this);\r\n    this.checkHyperLink = this.checkHyperLink.bind(this);\r\n  }\r\n  \r\n  updateState(newState){\r\n    this.setState({page:newState});\r\n  }\r\n  updateQuestions(updatedQuestions){\r\n    this.setState({ questions: updatedQuestions });\r\n  }\r\n  updateTags(updatedTags){\r\n    this.setState({ tags: updatedTags });\r\n  }\r\n\r\n  updateSearching(updateSearch){\r\n    this.setState({searching:updateSearch})\r\n  }\r\n  searchByTags(tag){\r\n    var search_arr = [];\r\n    var tag_arr = [tag];\r\n    this.state.questions.forEach(question => {\r\n      if(this.check_exist_byTag(question,tag_arr) == true){\r\n        search_arr.push(question);\r\n      }\r\n    });\r\n    console.log(search_arr)\r\n    this.setState({page:7, searching: search_arr});\r\n  }\r\n  check_exist_byTag(question,tag_search){\r\n    const tags = this.state.tags;\r\n    const tag_arr = question.tagIds;\r\n    var tag_in_ids = [];\r\n    for(let i = 0; i<tag_search.length;i++){\r\n      \r\n      for(let j = 0;j<tags.length;j++){\r\n        \r\n        if(tag_search[i] == tags[j].name){\r\n          tag_in_ids.push(tags[j].tid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    for(let i = 0; i < tag_arr.length; i++){\r\n      for(let j = 0; j< tag_in_ids.length;j++){\r\n        if(tag_arr[i] == tag_in_ids[j]){\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkHyperLink(){\r\n    const questions = this.state.questions;\r\n    for (const question of questions) {\r\n      question.hyperLink = 0; // 0 stand for error, 1 stand for true, 2 stand for incorrect format\r\n      \r\n    }\r\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/g;\r\n    const regex_format = /\\[([^\\]]+)\\]\\(([^\\s]+)\\)/g;\r\n    \r\n    if(this.state.questions[0].text.match(regex)){\r\n      this.state.questions[0].hyperLink = 1;\r\n      const [, linkText, url] = match.match(/\\[(.*?)\\]\\((https?:\\/\\/\\S+?)\\)/);\r\n    }\r\n    console.log(this.state.questions[0].hyperLink);\r\n  }\r\n\r\n  render(){\r\n    this.checkHyperLink();\r\n    return (\r\n      <>\r\n        <div className=\"header\">\r\n            <h1 id=\"header\">Fake Stack Overflow</h1>\r\n            <Search searching = {this.state.searching} />\r\n            \r\n        </div>\r\n        <div id=\"main\" className=\"main\">\r\n          <LeftMenu  updateState = {this.updateState}/>\r\n          <Homepage newpage ={this.state.page} questions = {this.state.questions} tags = {this.state.tags}\r\n          updateState = {this.updateState} updateQuestions = {this.updateQuestions} \r\n          updateTags = {this.updateTags} searchByTag = {this.searchByTags} searching = {this.state.searching}/>\r\n        </div>\r\n        \r\n      </>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default FakeStackOverflow;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}