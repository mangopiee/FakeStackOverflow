{"ast":null,"code":"var _jsxFileName = \"D:\\\\pa02react-team_andi_mingrong\\\\src\\\\components\\\\questions.js\";\nimport Model from '../models/model.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet model = new Model();\nconst questions = model.getAllQstns();\nconst tags = model.getAllTags();\nexport default function Questions_container() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"number_answers\",\n          children: [question.ansIds.length, \" answers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"views\",\n          children: [\" \", question.views, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h\", {\n          className: \"title\",\n          children: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags\",\n          children: TagsComponent(question, tags)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ask\",\n          children: [question.askedBy, \" asked \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: [\" at \", formatQuestionTime(question.askDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_c = Questions_container;\nfunction TagsComponent(question, tags) {\n  const arr = [];\n  for (let i = 0; i < question.tagIds.length; i++) {\n    for (let j = 0; j < tags.length; j++) {\n      if (question.tagIds[i] === tags[j].tid) {\n        arr.push(tags[j].name);\n      }\n    }\n  }\n  const tagButtons = arr.map((tagName, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n    children: tagName\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tagButtons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TagsComponent;\nfunction formatQuestionTime(questionDate) {\n  const currentDate = new Date();\n  const postDate = new Date(questionDate);\n  const timeDifference = currentDate - postDate;\n\n  // Convert milliseconds to seconds, minutes, or hours\n  const secondsDifference = Math.floor(timeDifference / 1000);\n  const minutesDifference = Math.floor(secondsDifference / 60);\n  const hoursDifference = Math.floor(minutesDifference / 60);\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const month = monthNames[postDate.getMonth()];\n  const date = postDate.getDate();\n  const hour = postDate.getHours();\n  const min = postDate.getMinutes();\n  const str = `${month} ${date} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  const str2 = `${month} ${date}, ${postDate.getFullYear()} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  if (secondsDifference < 60) {\n    return `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\n  } else if (minutesDifference < 60) {\n    return `${minutesDifference} minute${minutesDifference !== 1 ? 's' : ''} ago`;\n  } else if (hoursDifference < 24) {\n    return `${hoursDifference} hour${hoursDifference !== 1 ? 's' : ''} ago`;\n  } else if (currentDate.getFullYear() === postDate.getFullYear()) {\n    return str;\n  } else {\n    // If more than 24 hours ago, you can display the full date or another format\n    return str2;\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Questions_container\");\n$RefreshReg$(_c2, \"TagsComponent\");","map":{"version":3,"names":["Model","jsxDEV","_jsxDEV","model","questions","getAllQstns","tags","getAllTags","Questions_container","children","map","question","className","ansIds","length","fileName","_jsxFileName","lineNumber","columnNumber","views","title","TagsComponent","askedBy","formatQuestionTime","askDate","_c","arr","i","tagIds","j","tid","push","name","tagButtons","tagName","index","_c2","questionDate","currentDate","Date","postDate","timeDifference","secondsDifference","Math","floor","minutesDifference","hoursDifference","monthNames","month","getMonth","date","getDate","hour","getHours","min","getMinutes","str","toString","padStart","str2","getFullYear","$RefreshReg$"],"sources":["D:/pa02react-team_andi_mingrong/src/components/questions.js"],"sourcesContent":["import Model from '../models/model.js';\r\n\r\n\r\nlet model = new Model();\r\n\r\nconst questions = model.getAllQstns();\r\nconst tags = model.getAllTags();\r\n\r\nexport default function Questions_container() {\r\n    return(\r\n      <div>\r\n        {questions.map((question)=>(\r\n          <div className=\"question\">\r\n        <div className = \"p1\">\r\n          <h4 className=\"number_answers\" >{question.ansIds.length} answers</h4>\r\n          <h4 className = \"views\"> {question.views} views</h4>\r\n        </div>\r\n    \r\n        <div className=\"p2\">\r\n          <h className = \"title\">\r\n            {question.title}\r\n          </h>\r\n          <br/>\r\n          <div className=\"tags\">\r\n            {TagsComponent(question,tags)}\r\n          </div>\r\n        </div>\r\n        <div className=\"p3\">\r\n        \r\n          <p className=\"ask\">{question.askedBy} asked </p>\r\n          <p className=\"date\"> at {formatQuestionTime(question.askDate)}</p>\r\n        \r\n        </div>\r\n\r\n        <div></div>\r\n      </div>\r\n      ))}\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction TagsComponent( question, tags ) {\r\n  const arr = [];\r\n\r\n  for (let i = 0; i < question.tagIds.length; i++) {\r\n    for (let j = 0; j < tags.length; j++) {\r\n      if (question.tagIds[i] === tags[j].tid) {\r\n        arr.push(tags[j].name);\r\n      }\r\n    }\r\n  }\r\n\r\n  const tagButtons = arr.map((tagName, index) => (\r\n    <button key={index}>{tagName}</button>\r\n  ));\r\n  return(\r\n    <div>\r\n      {tagButtons}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction formatQuestionTime(questionDate) {\r\n  const currentDate = new Date();\r\n  const postDate = new Date(questionDate);\r\n\r\n  const timeDifference = currentDate - postDate;\r\n\r\n  // Convert milliseconds to seconds, minutes, or hours\r\n  const secondsDifference = Math.floor(timeDifference / 1000);\r\n  const minutesDifference = Math.floor(secondsDifference / 60);\r\n  const hoursDifference = Math.floor(minutesDifference / 60);\r\n\r\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const month = monthNames[postDate.getMonth()];\r\n  const date = postDate.getDate();\r\n  const hour = postDate.getHours();\r\n  const min = postDate.getMinutes();\r\n  const str = `${month} ${date} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\r\n  const str2 = `${month} ${date}, ${postDate.getFullYear()} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\r\n\r\n  if (secondsDifference < 60) {\r\n    return `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\r\n  } else if (minutesDifference < 60) {\r\n    return `${minutesDifference} minute${minutesDifference !== 1 ? 's' : ''} ago`;\r\n  } else if (hoursDifference < 24) {\r\n    return `${hoursDifference} hour${hoursDifference !== 1 ? 's' : ''} ago`;\r\n  } else if (currentDate.getFullYear() === postDate.getFullYear()) {\r\n    return str;\r\n  }else {\r\n    // If more than 24 hours ago, you can display the full date or another format\r\n    return str2;\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}