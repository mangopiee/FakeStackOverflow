{"ast":null,"code":"var _jsxFileName = \"D:\\\\pa02react-team_andi_mingrong\\\\src\\\\components\\\\Answer.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Answer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text_arr: [],\n      index: 0,\n      question\n    };\n    this.applyWebSide = this.applyWebSide.bind(this);\n    //this.returnText = this.applyWebSide(this);\n  }\n\n  applyWebSide(question) {\n    console.log(question);\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\n    var output = [];\n    if (question.hyper == 1) {\n      for (let i = 0; i < question.hyperLinks.length; i++) {\n        const parts = question.text.split(regex);\n        for (let j = 0; j < parts.length; j++) {\n          if (parts[j] == question.hyperText[i]) {\n            output.push('hyperlink**');\n            i++;\n            j++;\n          } else {\n            output.push(parts[j]);\n          }\n        }\n      }\n      //console.log(output);\n      return output;\n    } else {\n      return question.text;\n    }\n  }\n  returnText(output, index) {\n    if (output != 'hyperlink**') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: output\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        href: this.props.questions\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    }\n  }\n  render() {\n    const questions = this.props.questions;\n    const text_arr = this.applyWebSide(questions[0]);\n    console.log(text_arr);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text_arr.map((text, index) => this.returnText(text, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Answer;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Answer","Component","constructor","props","state","text_arr","index","question","applyWebSide","bind","console","log","regex","output","hyper","i","hyperLinks","length","parts","text","split","j","hyperText","push","returnText","children","fileName","_jsxFileName","lineNumber","columnNumber","href","questions","render","map"],"sources":["D:/pa02react-team_andi_mingrong/src/components/Answer.js"],"sourcesContent":["import React from \"react\";\r\n\r\nclass Answer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text_arr:[],\r\n      index:0,\r\n      question\r\n    }\r\n    this.applyWebSide = this.applyWebSide.bind(this);\r\n    //this.returnText = this.applyWebSide(this);\r\n  }\r\n\r\n  applyWebSide(question){\r\n   \r\n      console.log(question);\r\n      const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\r\n      var output = [];\r\n      if(question.hyper == 1){\r\n        for(let i = 0;i<question.hyperLinks.length;i++){\r\n          const parts = question.text.split(regex);\r\n          for(let j = 0; j < parts.length;j++){\r\n            if(parts[j] == question.hyperText[i]){\r\n              output.push('hyperlink**');\r\n              i++;\r\n              j++;\r\n            }\r\n            else{\r\n              output.push(parts[j]);\r\n            }\r\n          }\r\n        }\r\n        //console.log(output);\r\n        return output;\r\n      }else{\r\n        return question.text;\r\n      }\r\n    }\r\n  \r\n    returnText(output,index){\r\n      if(output!='hyperlink**'){\r\n        return(\r\n          <div key = {index}>\r\n            {output}\r\n          </div>\r\n        );\r\n      }\r\n      else{\r\n        return(\r\n          <div key={index} href = {this.props.questions}>\r\n            \r\n          </div>\r\n        );\r\n      }\r\n      \r\n    }\r\n    \r\n  \r\n  render() {\r\n    const questions = this.props.questions;\r\n    const text_arr = this.applyWebSide(questions[0]);\r\n    \r\n    console.log(text_arr);\r\n    return (\r\n      <div>\r\n        \r\n          {text_arr.map((text,index)=>(this.returnText(text,index)))}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Answer;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,SAASH,KAAK,CAACI,SAAS,CAAC;EACnCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAC,EAAE;MACXC,KAAK,EAAC,CAAC;MACPC;IACF,CAAC;IACD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD;EACF;;EAEAD,YAAYA,CAACD,QAAQ,EAAC;IAElBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,MAAMK,KAAK,GAAG,qCAAqC;IACnD,IAAIC,MAAM,GAAG,EAAE;IACf,IAAGN,QAAQ,CAACO,KAAK,IAAI,CAAC,EAAC;MACrB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,GAACR,QAAQ,CAACS,UAAU,CAACC,MAAM,EAACF,CAAC,EAAE,EAAC;QAC7C,MAAMG,KAAK,GAAGX,QAAQ,CAACY,IAAI,CAACC,KAAK,CAACR,KAAK,CAAC;QACxC,KAAI,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACD,MAAM,EAACI,CAAC,EAAE,EAAC;UAClC,IAAGH,KAAK,CAACG,CAAC,CAAC,IAAId,QAAQ,CAACe,SAAS,CAACP,CAAC,CAAC,EAAC;YACnCF,MAAM,CAACU,IAAI,CAAC,aAAa,CAAC;YAC1BR,CAAC,EAAE;YACHM,CAAC,EAAE;UACL,CAAC,MACG;YACFR,MAAM,CAACU,IAAI,CAACL,KAAK,CAACG,CAAC,CAAC,CAAC;UACvB;QACF;MACF;MACA;MACA,OAAOR,MAAM;IACf,CAAC,MAAI;MACH,OAAON,QAAQ,CAACY,IAAI;IACtB;EACF;EAEAK,UAAUA,CAACX,MAAM,EAACP,KAAK,EAAC;IACtB,IAAGO,MAAM,IAAE,aAAa,EAAC;MACvB,oBACEd,OAAA;QAAA0B,QAAA,EACGZ;MAAM,GADGP,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEX;IAEV,CAAC,MACG;MACF,oBACE9B,OAAA;QAAiB+B,IAAI,EAAI,IAAI,CAAC3B,KAAK,CAAC4B;MAAU,GAApCzB,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAET;IAEV;EAEF;EAGFG,MAAMA,CAAA,EAAG;IACP,MAAMD,SAAS,GAAG,IAAI,CAAC5B,KAAK,CAAC4B,SAAS;IACtC,MAAM1B,QAAQ,GAAG,IAAI,CAACG,YAAY,CAACuB,SAAS,CAAC,CAAC,CAAC,CAAC;IAEhDrB,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrB,oBACEN,OAAA;MAAA0B,QAAA,EAEKpB,QAAQ,CAAC4B,GAAG,CAAC,CAACd,IAAI,EAACb,KAAK,KAAI,IAAI,CAACkB,UAAU,CAACL,IAAI,EAACb,KAAK,CAAE;IAAC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAExD;EAEV;AAEF;AAEA,eAAe7B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}