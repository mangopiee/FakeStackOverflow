{"ast":null,"code":"var _jsxFileName = \"D:\\\\pa02react-team_andi_mingrong\\\\src\\\\components\\\\answersPage.js\";\nimport Model from '../models/model.js';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst model = new Model();\n\n//const answers = model.getAllAnswers();\n\nclass AnswersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.newQuestion.title,\n      text: props.newQuestion.text,\n      askedBy: props.newQuestion.askedBy,\n      askDate: props.newQuestion.askDate,\n      ansIds: props.newQuestion.ansIds,\n      views: props.newQuestion.views,\n      num_ans: props.newQuestion.ansIds.length,\n      link_index: 0,\n      index: 0\n    };\n    this.model = model;\n    this.goPostAnswer = this.goPostAnswer.bind(this);\n    this.applyWebSide = this.applyWebSide.bind(this);\n  }\n  goPostAnswer() {\n    // this.state.ansIds.push('a'+(answers.length+1));\n    // console.log(this.state.ansIds);\n    this.props.goPost();\n  }\n  applyWebSide(question) {\n    console.log(question);\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\n    var output = [];\n    if (question.hyper == 1) {\n      for (let i = 0; i < question.hyperLinks.length; i++) {\n        const parts = question.text.split(regex);\n        for (let j = 0; j < parts.length; j++) {\n          if (parts[j] == question.hyperText[i]) {\n            output.push('hyperlink**');\n            i++;\n            j++;\n          } else {\n            output.push(parts[j]);\n          }\n        }\n      }\n      //console.log(output);\n      return output;\n    } else {\n      const parts = question.text.split(regex);\n      return parts;\n    }\n  }\n  returnText(output, index) {\n    if (output != 'hyperlink**') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: output\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    } else {\n      var link_index = this.state.link_index++;\n      console.log(link_index);\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.props.newQuestion.hyperLinks[link_index],\n        children: this.props.newQuestion.hyperText[link_index]\n      }, `a-${link_index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this);\n    }\n  }\n  brainPower(answer_text) {\n    var front_text, hypertext, back_text;\n    const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\n    const matches = question.text.match(regex);\n    if (matches) {\n      const [front_text, hypertext, url, back_text] = matches.match;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: front_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: hypertext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: back_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    } else {\n      /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  render() {\n    const answersIds = this.state.ansIds;\n    console.log(answersIds);\n    console.log(this.props.answers);\n    const answers = this.props.answers.sort((a, b) => b.ansDate - a.ansDate);\n    const filteredAnswers = answers.filter(answer => answersIds.includes(answer.aid));\n    const text_arr = this.applyWebSide(this.props.newQuestion);\n    const display = text_arr.map((text, index) => this.returnText(text, index));\n    console.log(filteredAnswers);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question_section1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"numberOfAnswers\",\n            children: [this.state.num_ans, \" answers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"q_title\",\n            children: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"askQ\",\n            onClick: this.props.setPage,\n            children: \"Ask Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewdisplay\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"numOfViews\",\n              children: [\" \", this.state.views, \" views\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textdisplay\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"questionText\",\n              children: display\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thedate\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ask\",\n              children: [this.state.askedBy, \" asked \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: [\" at \", formatQuestionTime(this.state.askDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oneAnswer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answerBody\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answer.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"answer\",\n              children: [answer.ansBy, \" answered \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"date\",\n              children: [\" \", formatQuestionTime(answer.ansDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"answer_question\",\n          onClick: () => this.goPostAnswer(),\n          children: \"Answer Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default AnswersPage;\nfunction formatQuestionTime(questionDate) {\n  const currentDate = new Date();\n  const postDate = new Date(questionDate);\n  const timeDifference = currentDate - postDate;\n\n  // Convert milliseconds to seconds, minutes, or hours\n  const secondsDifference = Math.floor(timeDifference / 1000);\n  const minutesDifference = Math.floor(secondsDifference / 60);\n  const hoursDifference = Math.floor(minutesDifference / 60);\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const month = monthNames[postDate.getMonth()];\n  const date = postDate.getDate();\n  const hour = postDate.getHours();\n  const min = postDate.getMinutes();\n  const str = `${month} ${date} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  const str2 = `${month} ${date}, ${postDate.getFullYear()} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\n  if (secondsDifference < 60) {\n    return `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\n  } else if (minutesDifference < 60) {\n    return `${minutesDifference} minute${minutesDifference !== 1 ? 's' : ''} ago`;\n  } else if (hoursDifference < 24) {\n    return `${hoursDifference} hour${hoursDifference !== 1 ? 's' : ''} ago`;\n  } else if (currentDate.getFullYear() === postDate.getFullYear()) {\n    return str;\n  } else {\n    // If more than 24 hours ago, you can display the full date or another format\n    return str2;\n  }\n}","map":{"version":3,"names":["Model","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","model","AnswersPage","Component","constructor","props","state","title","newQuestion","text","askedBy","askDate","ansIds","views","num_ans","length","link_index","index","goPostAnswer","bind","applyWebSide","goPost","question","console","log","regex","output","hyper","i","hyperLinks","parts","split","j","hyperText","push","returnText","children","fileName","_jsxFileName","lineNumber","columnNumber","href","brainPower","answer_text","front_text","hypertext","back_text","matches","match","url","render","answersIds","answers","sort","a","b","ansDate","filteredAnswers","filter","answer","includes","aid","text_arr","display","map","className","id","onClick","setPage","formatQuestionTime","ansBy","questionDate","currentDate","Date","postDate","timeDifference","secondsDifference","Math","floor","minutesDifference","hoursDifference","monthNames","month","getMonth","date","getDate","hour","getHours","min","getMinutes","str","toString","padStart","str2","getFullYear"],"sources":["D:/pa02react-team_andi_mingrong/src/components/answersPage.js"],"sourcesContent":["import Model from '../models/model.js';\r\nimport React, { useState } from 'react';\r\n\r\nconst model = new Model();\r\n\r\n//const answers = model.getAllAnswers();\r\n\r\nclass AnswersPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title:props.newQuestion.title,\r\n            text: props.newQuestion.text,\r\n            askedBy: props.newQuestion.askedBy,\r\n            askDate: props.newQuestion.askDate,\r\n            ansIds: props.newQuestion.ansIds,\r\n            views: props.newQuestion.views,\r\n            num_ans: props.newQuestion.ansIds.length,\r\n            link_index: 0,\r\n            index: 0\r\n        };\r\n        this.model = model;\r\n        this.goPostAnswer = this.goPostAnswer.bind(this);\r\n        this.applyWebSide = this.applyWebSide.bind(this);\r\n        \r\n    }\r\n\r\n    goPostAnswer(){\r\n        // this.state.ansIds.push('a'+(answers.length+1));\r\n        // console.log(this.state.ansIds);\r\n        this.props.goPost();\r\n    }\r\n\r\n    applyWebSide(question){\r\n        console.log(question);\r\n        const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\r\n        var output = [];\r\n        if(question.hyper == 1){\r\n          for(let i = 0;i<question.hyperLinks.length;i++){\r\n            const parts = question.text.split(regex);\r\n            for(let j = 0; j < parts.length;j++){\r\n              if(parts[j] == question.hyperText[i]){\r\n                output.push('hyperlink**');\r\n                i++;\r\n                j++;\r\n              }\r\n              else{\r\n                output.push(parts[j]);\r\n              }\r\n            }\r\n          }\r\n          //console.log(output);\r\n          return output;\r\n        }else{\r\n            const parts = question.text.split(regex);\r\n          return parts;\r\n        }\r\n      }\r\n    \r\n    returnText(output,index){\r\n        if(output!='hyperlink**'){\r\n          return(\r\n            <span key = {index}>\r\n              {output}\r\n            </span>\r\n          );\r\n        }\r\n        else{\r\n          \r\n          var link_index = this.state.link_index++;\r\n          console.log(link_index)\r\n          return(\r\n            <a key={`a-${link_index}`} href = {this.props.newQuestion.hyperLinks[link_index]}>\r\n              {this.props.newQuestion.hyperText[link_index]}\r\n            </a>\r\n          );\r\n        }\r\n        \r\n    }\r\n    \r\n    brainPower(answer_text){\r\n      var front_text,hypertext,back_text;\r\n      const regex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s]+)\\)/;\r\n      const matches = question.text.match(regex);\r\n      if(matches){\r\n        const [front_text,hypertext,url,back_text] = matches.match\r\n          return(\r\n            <>\r\n            <span>\r\n              {front_text}\r\n            </span>\r\n            <a href=''>\r\n            {hypertext}\r\n          </a>\r\n            <span>\r\n            {back_text}\r\n          </span>\r\n          </>\r\n          );\r\n        \r\n      }\r\n      else{\r\n        <span>\r\n              {answer_text}\r\n        </span>\r\n      }\r\n      \r\n    }\r\n\r\n    render(){\r\n        const answersIds = this.state.ansIds;\r\n        console.log(answersIds);\r\n        console.log(this.props.answers);\r\n        const answers = this.props.answers.sort((a, b) => b.ansDate - a.ansDate)\r\n        const filteredAnswers = answers.filter((answer) => answersIds.includes(answer.aid));\r\n        const text_arr = this.applyWebSide(this.props.newQuestion);\r\n        const display = text_arr.map((text,index)=>(this.returnText(text,index)))\r\n\r\n        console.log(filteredAnswers); \r\n        \r\n        return (\r\n            <>\r\n            <div className=\"question_main\">\r\n                <div className = \"question_section1\">\r\n                    <h1 id=\"numberOfAnswers\" >{this.state.num_ans} answers</h1>\r\n                    <h1 id = \"q_title\">{this.state.title}</h1>\r\n\r\n                    <button id=\"askQ\" onClick={this.props.setPage}>Ask Question</button>\r\n                </div>\r\n                <div className=\"question\">\r\n                    <div className=\"viewdisplay\">\r\n                        <h2 id = \"numOfViews\"> {this.state.views} views</h2>\r\n                    </div>\r\n                    <div className=\"textdisplay\">\r\n                        <p id = \"questionText\">{display}</p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"thedate\">\r\n                        <p className=\"ask\">{this.state.askedBy} asked </p>\r\n                        <p className=\"date\"> at {formatQuestionTime(this.state.askDate)}</p>\r\n                    </div>\r\n                </div>\r\n            <div></div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                {filteredAnswers.map((answer, index)=>(\r\n                    <div className = \"oneAnswer\" key={index}>\r\n                        <div className = \"answerBody\">\r\n                            <p>{answer.text}</p>\r\n                        </div>\r\n          \r\n                        <div className=\"userInfo\">\r\n                        <p id=\"answer\">{answer.ansBy} answered </p>\r\n                        <p id=\"date\"> {formatQuestionTime(answer.ansDate)}</p>\r\n                        </div>\r\n\r\n                        <div></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n            <p>\r\n                <button id = \"answer_question\" onClick = {() => this.goPostAnswer()}>Answer Question</button>\r\n            </p>\r\n            </>\r\n        );\r\n    }\r\n  \r\n}export default AnswersPage;\r\n\r\nfunction formatQuestionTime(questionDate) {\r\n    const currentDate = new Date();\r\n    const postDate = new Date(questionDate);\r\n  \r\n    const timeDifference = currentDate - postDate;\r\n  \r\n    // Convert milliseconds to seconds, minutes, or hours\r\n    const secondsDifference = Math.floor(timeDifference / 1000);\r\n    const minutesDifference = Math.floor(secondsDifference / 60);\r\n    const hoursDifference = Math.floor(minutesDifference / 60);\r\n  \r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const month = monthNames[postDate.getMonth()];\r\n    const date = postDate.getDate();\r\n    const hour = postDate.getHours();\r\n    const min = postDate.getMinutes();\r\n    const str = `${month} ${date} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\r\n    const str2 = `${month} ${date}, ${postDate.getFullYear()} at ${hour.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;\r\n  \r\n    if (secondsDifference < 60) {\r\n      return `${secondsDifference} second${secondsDifference !== 1 ? 's' : ''} ago`;\r\n    } else if (minutesDifference < 60) {\r\n      return `${minutesDifference} minute${minutesDifference !== 1 ? 's' : ''} ago`;\r\n    } else if (hoursDifference < 24) {\r\n      return `${hoursDifference} hour${hoursDifference !== 1 ? 's' : ''} ago`;\r\n    } else if (currentDate.getFullYear() === postDate.getFullYear()) {\r\n      return str;\r\n    }else {\r\n      // If more than 24 hours ago, you can display the full date or another format\r\n      return str2;\r\n    }\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}