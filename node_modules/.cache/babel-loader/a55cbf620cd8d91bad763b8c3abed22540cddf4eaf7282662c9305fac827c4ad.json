{"ast":null,"code":"var _jsxFileName = \"D:\\\\pa02react-team_andi_mingrong\\\\src\\\\components\\\\searching.js\";\nimport React from 'react';\nimport Model from '../models/model.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Searching extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n    this.handleEnterKey = e => {\n      if (e.key === 'Enter') {\n        this.enterPressed();\n      }\n    };\n    this.state = {\n      searching: this.props.searching,\n      input: null,\n      search_results: ''\n    };\n    this.combineAndfilter = this.combineAndfilter.bind(this);\n    this.enterPressed = this.enterPressed.bind(this);\n  }\n  combineAndfilter(array1, array2) {\n    const common = array1.filter(element => array2.includes(element));\n    const uniqueArray1 = array1.filter(element => !array2.includes(element));\n    const uniqueArray2 = array2.filter(element => !array1.includes(element));\n    return [...common, ...uniqueArray1, ...uniqueArray2];\n  }\n  enterPressed() {\n    const inputString = this.state.input.toLowerCase();\n    let matchedTags = [];\n    let matchedQfromTags = [];\n    if (inputString.includes(\"[\") || inputString.includes(\"]\")) {\n      const regex = /\\[(.*?)\\]/g;\n      const matches = [...inputString.matchAll(regex)];\n      const insideBrackets = [];\n      let outsideBrackets = [];\n      let lastIndex = 0;\n      matches.forEach(match => {\n        const [fullMatch, content] = match;\n        const startIndex = inputString.indexOf(fullMatch, lastIndex);\n        const outsideContent = inputString.substring(lastIndex, startIndex);\n        insideBrackets.push(content);\n        outsideBrackets.push(outsideContent);\n        lastIndex = startIndex + fullMatch.length;\n      });\n\n      // Get the content after the last match\n      const remainingText = inputString.substring(lastIndex);\n      outsideBrackets.push(remainingText);\n\n      // Filter the array to remove empty strings\n      outsideBrackets = outsideBrackets.filter(content => content !== '');\n      matchedTags = this.props.tags.filter(tag => insideBrackets.some(string => tag.name === string));\n      if (matchedTags !== null) {\n        matchedQfromTags = this.props.questions.filter(question => matchedTags.some(tag => question.tagIds.includes(tag.tid)));\n      }\n      this.state.search_results = this.props.questions.filter(question => outsideBrackets.some(string => question.title.toLowerCase().includes(string)) || outsideBrackets.some(string => question.text.toLowerCase().includes(string)));\n      this.state.search_results = this.combineAndfilter(matchedQfromTags, this.state.search_results);\n    } else {\n      this.state.search_results = this.props.questions.filter(question => question.title.toLowerCase().includes(inputString) || question.text.toLowerCase().includes(inputString));\n    }\n    this.props.updateState(7);\n    this.props.updateSearching(this.state.search_results);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search ...\",\n      id: \"search\",\n      value: this.props.input,\n      onChange: this.handleInputChange,\n      onKeyPress: this.handleEnterKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Searching;","map":{"version":3,"names":["React","Model","jsxDEV","_jsxDEV","Searching","Component","constructor","props","handleInputChange","e","setState","input","target","value","handleEnterKey","key","enterPressed","state","searching","search_results","combineAndfilter","bind","array1","array2","common","filter","element","includes","uniqueArray1","uniqueArray2","inputString","toLowerCase","matchedTags","matchedQfromTags","regex","matches","matchAll","insideBrackets","outsideBrackets","lastIndex","forEach","match","fullMatch","content","startIndex","indexOf","outsideContent","substring","push","length","remainingText","tags","tag","some","string","name","questions","question","tagIds","tid","title","text","updateState","updateSearching","render","type","placeholder","id","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/pa02react-team_andi_mingrong/src/components/searching.js"],"sourcesContent":["import React from 'react'\r\nimport Model from '../models/model.js';\r\n\r\nclass Searching extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searching:this.props.searching,\r\n            input: null,\r\n            search_results: ''\r\n        }\r\n        this.combineAndfilter = this.combineAndfilter.bind(this);\r\n        this.enterPressed = this.enterPressed.bind(this);\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ input: e.target.value });\r\n    }\r\n\r\n    handleEnterKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n          this.enterPressed();\r\n        }\r\n    }\r\n\r\n    combineAndfilter(array1, array2){\r\n        const common = array1.filter(element => array2.includes(element));\r\n        const uniqueArray1 = array1.filter(element => !array2.includes(element));\r\n        const uniqueArray2 = array2.filter(element => !array1.includes(element));\r\n        \r\n        return [...common, ...uniqueArray1, ...uniqueArray2];\r\n    }\r\n\r\n    enterPressed(){\r\n        const inputString = this.state.input.toLowerCase();\r\n        let matchedTags = [];\r\n        let matchedQfromTags = [];\r\n        if(inputString.includes(\"[\") || inputString.includes(\"]\")){\r\n            const regex = /\\[(.*?)\\]/g;\r\n\r\n            const matches = [...inputString.matchAll(regex)];\r\n\r\n            const insideBrackets = [];\r\n            let outsideBrackets = [];\r\n\r\n            let lastIndex = 0;\r\n\r\n            matches.forEach((match) => {\r\n                const [fullMatch, content] = match;\r\n                const startIndex = inputString.indexOf(fullMatch, lastIndex);\r\n                const outsideContent = inputString.substring(lastIndex, startIndex);\r\n\r\n                insideBrackets.push(content);\r\n                outsideBrackets.push(outsideContent);\r\n\r\n                lastIndex = startIndex + fullMatch.length;\r\n            });\r\n\r\n            // Get the content after the last match\r\n            const remainingText = inputString.substring(lastIndex);\r\n\r\n            outsideBrackets.push(remainingText);\r\n\r\n            // Filter the array to remove empty strings\r\n            outsideBrackets = outsideBrackets.filter((content) => content !== '');\r\n\r\n            matchedTags = this.props.tags.filter((tag) => insideBrackets.some((string) => tag.name === string));\r\n            if(matchedTags !== null){\r\n                matchedQfromTags = this.props.questions.filter((question) => matchedTags.some((tag) => question.tagIds.includes(tag.tid)));\r\n            }\r\n            this.state.search_results = this.props.questions.filter((question) => outsideBrackets.some((string) => question.title.toLowerCase().includes(string)) \r\n            || outsideBrackets.some((string) => question.text.toLowerCase().includes(string)));\r\n\r\n            this.state.search_results = this.combineAndfilter(matchedQfromTags, this.state.search_results);\r\n        }\r\n        else{\r\n            this.state.search_results = this.props.questions.filter((question) => question.title.toLowerCase().includes(inputString) || question.text.toLowerCase().includes(inputString));\r\n        }\r\n        this.props.updateState(7);\r\n        this.props.updateSearching(this.state.search_results);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <input type=\"text\" placeholder=\"Search ...\" id=\"search\" \r\n            value = {this.props.input} onChange={this.handleInputChange} onKeyPress={this.handleEnterKey} /> \r\n        );\r\n    }\r\n}\r\nexport default Searching;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}